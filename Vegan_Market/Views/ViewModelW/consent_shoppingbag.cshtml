@model Vegan_Market.Models.ViewModel
@{
    ViewBag.Title = "consent_shoppingbag";
    Layout = "~/Views/Shared/_Web_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Address</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.address.country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address.country, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address.country, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.address.city, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address.city, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address.city, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.address.town, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address.town, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address.town, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.address.customer_no, "customer_no", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("customer_no", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.address.customer_no, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.address.address_text, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address.address_text, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address.address_text, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.paymet.cart_num, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.paymet.cart_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.paymet.cart_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.paymet.cart_num, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.paymet.cart_num, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.paymet.cart_num, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.paymet.cartexpmo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.paymet.cartexpmo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.paymet.cartexpmo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.paymet.cartexpyr, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.paymet.cartexpyr, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.paymet.cartexpyr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.paymet.cvv, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.paymet.cvv, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.paymet.cvv, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.paymet.payment_allowed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.paymet.payment_allowed)
                @Html.ValidationMessageFor(model => model.paymet.payment_allowed, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}


